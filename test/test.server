#!/usr/bin/env node
const { exec } = require('child_process')
const express = require('express')
const bodyParser = require('body-parser')
const path = require('path')
const app = express()
const hostname = '127.0.0.1'
const port = 8000

app.use(express.static(path.join(__dirname, '..')))
app.use(bodyParser.text())

app.get('/succeed', (req, res) => {
  res.status(200).send('hello world.')
})

app.get('/fail', (req, res) => {
  res.status(404).send('Good bye world.')
})

app.get('/error', (req, res) => {
  res.status(500).send('error world.')
})

app.get('/request', processRequest)

app.post('/request', processRequest)

app.put('/request', processRequest)

app.patch('/request', processRequest)

app.delete('/request', processRequest)

function processRequest(req, res) {
  const headers = {}
  const isDelete = req.method === 'DELETE'

  for (const key in req.headers) {
    const value = req.headers[key]
    headers[key] = Array.isArray(value) ? value[0] : value
  }

  res.set('Date', 'Sat, 23 Sep 2017 15:41:16 GMT-0300')

  res.json({
    method: req.method,
    headers,
    body: isDelete ? '' : req.body
  })
}

const args = process.argv.slice(2)
const command = args.join(' ')

const server = app.listen(port, hostname, () => {
  exec(command, (error, stdout, stderr) => {
    server.close()

    if (error) {
      console.log('error.message', error.message)
      process.exit(1)
    } else if (stderr) {
      console.log('stderr', stderr)
      process.exit(1)
    } else {
      console.log(stdout)
      process.exit()
    }
  })
})
